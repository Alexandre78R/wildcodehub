services:
  backend:
    # build: ./backend
    image: wildcodehub/dev-server-backend
    ports:
      - 4000:4000
    profiles: ["dev", "production", "test"]
    volumes:
      - ./backend/src:/app/src
    environment:
      - WDS_SOCKET_HOST=127.0.0.1
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true

    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./backend/.env
  frontend:
    #build: ./frontend
    image: wildcodehub/dev-server-frontend
    ports:
      - 3000:3000
    profiles: ["dev", "production", "test"]
    volumes:
      - ./frontend/src:/app/src
    environment:
      - WDS_SOCKET_HOST=127.0.0.1
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - NEXT_PUBLIC_IMAGE_URL=http://localhost:8000
    #  env_file:
    #    - ./.env
  db:
    image: postgres:15
    profiles: ["dev", "production", "test"]
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d wildcodehub -U root"]
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: wildcodehub
    ports:
      - 5433:5432
    volumes:
      - wildcodehub-data:/var/lib/postgresql/data
  adminer:
    image: adminer
    profiles: ["dev", "production", "test"]
    depends_on:
      - db
    restart: always
    ports:
      - 8081:8080

  db_test:
    image: postgres:15
    profiles: ["test"]
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d wildcodehub-test -U root"]
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: wildcodehub-test
    ports:
      - 5434:5432
    volumes:
      - wildcodehub-data-test:/var/lib/postgresql/data
  nginx:
    image: nginx:1.21.3
    depends_on:
      - backend
      - frontend
    restart: always
    ports:
      - ${GATEWAY_PORT:-8000}:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - web-client-build:/web-client-build
      - ./logs:/var/log/nginx

volumes:
  wildcodehub-data:
  wildcodehub-data-test:
