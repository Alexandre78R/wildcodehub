services:
  backend:
    build: ./backend
    ports:
      - 4000:4000
    profiles: ["dev", "production", "test"]
    volumes:
      - ./backend/src:/app/src
    environment:
      - WDS_SOCKET_HOST=127.0.0.1
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true 
    depends_on:
      db-dev:
        condition: service_healthy
    command: sh -c 'npm run migrate && npm start' 
    env_file:
      - ./backend/.env
  frontend:
    build: ./frontend
    ports:
      - 3000:3000
    profiles: ["dev", "production", "test"]
    volumes:
      - ./frontend/src:/app/src
    environment:
      - WDS_SOCKET_HOST=127.0.0.1
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - NEXT_PUBLIC_IMAGE_URL=http://localhost:8000
    env_file:
       - ./frontend/.env
  db-dev:
    image: postgres:15
    profiles: ["dev", "production", "test"]
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DATABASE_DB} -U ${USERNAME_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    env_file:
      - ./.env
    ports:
      - 5434:5432
    volumes:
      - wildcodehub-data:/var/lib/postgresql/data
  adminer:
    image: adminer
    profiles: ["dev", "production", "test"]
    depends_on:
      - db-dev
    restart: always
    ports:
      - 8081:8080

  db_test:
    image: postgres:15
    profiles: ["test"]
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d wildcodehub-test -U root"]
      interval: 5s
      timeout: 5s
      retries: 10
    env_file:
      - .env
    ports:
      - 5435:5432
    volumes:
      - wildcodehub-data-test:/var/lib/postgresql/data

volumes:
  wildcodehub-data:
  wildcodehub-data-test:
